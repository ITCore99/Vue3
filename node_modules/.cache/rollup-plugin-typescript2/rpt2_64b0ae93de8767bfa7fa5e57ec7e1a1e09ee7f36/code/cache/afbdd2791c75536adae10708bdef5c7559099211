{"code":"import { isArray, isObject } from \"@vue/shared\";\r\nimport { createVNode, isVNode } from \"./vnode\";\r\n// h 函数创建虚拟节点\r\nexport const h = function (type, propsOrChildren, children = null) {\r\n    const l = arguments.length;\r\n    if (l === 2) { // 类型 + 属性 或者是 类型 + 孩子\r\n        if (isObject(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            if (isVNode(propsOrChildren)) { // 是虚拟节点 则是孩子\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            else { // 是属性\r\n                return createVNode(type, propsOrChildren);\r\n            }\r\n        }\r\n        else { // 第二个参数不是对象一定是孩子\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(null, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n};\r\n","references":["/Users/fuzhuoning/Desktop/own/vue3/packages/shared/src/index.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-core/src/vnode.ts"]}
