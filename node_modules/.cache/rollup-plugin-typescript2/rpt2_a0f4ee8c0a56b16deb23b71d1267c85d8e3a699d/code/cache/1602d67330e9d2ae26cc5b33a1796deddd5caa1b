{"code":"// 这里是针对属性操作 是一系列的属性操作\r\nimport { patchAttr } from './modules/attr';\r\nimport { patchClass } from './modules/class';\r\nimport { patchEvent } from './modules/event';\r\nimport { patchStyle } from './modules/style';\r\nexport const patchProp = (el, key, prevValue, nextValue) => {\r\n    switch (key) {\r\n        case 'class':\r\n            patchClass(el, nextValue); // 使用最新的将之前的覆盖掉\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            // 如果不是事件才是属性\r\n            if (/^on[^a-z]/.test(key)) { // 判断是不是事件 事件写法onClick\r\n                patchEvent(el, key, nextValue);\r\n            }\r\n            else {\r\n                patchAttr(el, key, nextValue); // 这里调用的方式不是和2.0那样是需要attr包裹而是直接写所以直接赋值即可\r\n            }\r\n            break;\r\n    }\r\n};\r\n","references":["/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-dom/src/modules/attr.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-dom/src/modules/class.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-dom/src/modules/event.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-dom/src/modules/style.ts"]}
