{"code":"// runtime-dom核心就是提供dom操作Api\r\n// 操作节点和属性的更新 \r\nimport { createRenderer } from \"@vue/runtime-core\";\r\nimport { extend } from \"@vue/shared\";\r\nimport { nodeOps } from \"./nodeOps\";\r\nimport { patchProp } from \"./patchProp\";\r\n// 节点操作 增删改查\r\n// 样式操作 增加、删除、更新、类、事件、其他属性\r\n// 需要将nodeOps和patchProp进行整合 渲染的时候会使用到\r\nexport const renderOptions = extend({}, nodeOps, { patchProp });\r\n// 用户调用的是runtime-dom runtime-dom 调用runtime-core \r\n// runtimedom(浏览器) 是为了解决平台差异\r\n// vue中runtime-core里面提供了核心的方法 用来处理渲染 会使用runtime-dom中的api来进行渲染(这样写的好处将dom和core层分开)\r\nexport function createApp(rootComponent, rootProps = null) {\r\n    const app = createRenderer(renderOptions).createApp(rootComponent, rootProps);\r\n    const { mount } = app;\r\n    // 重写mount方法 添加自己的逻辑\r\n    app.mount = function (selector) {\r\n        // 这是进行对容器的清空\r\n        const container = nodeOps.querySelector(selector);\r\n        container.innerHTML = '';\r\n        // 调用createRender中的mount方法\r\n        mount(container);\r\n        // 将组建渲染成Dom元素 进行挂载\r\n    };\r\n    return app;\r\n}\r\n// 保证我们使用的runtime-dom里面的\r\nexport * from '@vue/runtime-core';\r\n","references":["/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-core/src/index.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/shared/src/index.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-dom/src/nodeOps.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-dom/src/patchProp.ts","/Users/fuzhuoning/Desktop/own/vue3/packages/runtime-core/src/index.ts"]}
