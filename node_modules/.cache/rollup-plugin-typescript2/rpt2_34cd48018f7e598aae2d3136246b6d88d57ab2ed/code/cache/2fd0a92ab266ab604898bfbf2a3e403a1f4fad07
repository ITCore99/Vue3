{"code":"// 比对处理一些事件\r\nexport const patchEvent = (el, key, value) => {\r\n    // 注意这里的技巧 平常我们要修改addEventLister绑定的方法是 先移除再绑定 但是有点麻烦\r\n    // 这里我们使用一个变量来存放函数，每次去绑定一个匿名函数在这个匿名函数函数中调用这个引用，所以每次修改的时候只需要修改引用就行。\r\n    // 对原函数进行缓存\r\n    const invokers = el._vei || (el._vei = {});\r\n    const exist = invokers[key];\r\n    if (value && exist) { // 需要对事件进行更新\r\n        exist.value = value;\r\n    }\r\n    else {\r\n        const eventName = key.slice(2).toLowerCase(); // 获取事件名\r\n        if (value) { // 需要绑定事件 之前没有进行绑定过\r\n            const invoker = invokers[key] = createInvoker(value);\r\n            el.addEventListener(eventName, invoker);\r\n        }\r\n        else { // value 不存在需要移除\r\n            if (exist) {\r\n                el.removeEventListener(eventName, exist);\r\n                invokers[key] = null;\r\n            }\r\n        }\r\n    }\r\n};\r\n// 创建一个匿名的invoker\r\nfunction createInvoker(value) {\r\n    const invoker = (e) => {\r\n        invoker.value(e);\r\n    };\r\n    invoker.value = value; // 这里进行保存 修改的时候只需要修改这个引用就可以\r\n    return invoker;\r\n}\r\n","references":[]}
